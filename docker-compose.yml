version: "3.3"

volumes:
  data:

services:
  db:
    image: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MARIADB_DATABASE}
      MYSQL_USER: ${MARIADB_USER}
      MYSQL_PASSWORD: ${MARIADB_PASSWORD}
    volumes:
      - data:/var/lib/mysql
    ports:
      - 3306:3306

  extension-app-dev:
    build:
      context: .
      dockerfile: ./.docker/extension-vite/Dockerfile
    volumes:
      - ./extension-vite:/app
      - /app/node_modules # create a volume, so no need to reinstall the node modules
    ports:
      - ${VITE_DEV_PORT}:5000
    environment:
      - CHOKIDAR_USEPOLLING=true
    env_file:
      - ./.env

  queue:
    env_file:
      - ./.env
    build:
      context: ./.docker/queue # will use this directory, and find Dockerfile there
    ports:
      - "5672:5672" # RabbitMQ
      - "15672:15672" # management interface
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
      RABBITMQ_DEFAULT_VHOST: "/"
    command: ${RABBITMQ_ADMIN_USER} ${RABBITMQ_ADMIN_PASS} # pass this to entrypoint script to create admin account

  flower:
    image: mher/flower
    depends_on:
      - queue
    env_file:
      - ./.env
    command: [
        "celery",
        "flower",
        "--broker_api=http://${RABBITMQ_USER}:${RABBITMQ_PASS}@queue:15672/api//",
      ] # the `@queue` here is network of queue service, cannot use @localhost in docker container
    environment:
      - CELERY_BROKER_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@queue:5672//
      # - CELERY_RESULT_BACKEND=amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@queue:5672//
    ports:
      - 5555:5555
