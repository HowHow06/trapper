"""modify datatype for varchar in user table

Revision ID: 69e31b14d31b
Revises: f67992e9945c
Create Date: 2023-06-19 15:00:28.826896

"""
import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '69e31b14d31b'
down_revision = 'f67992e9945c'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'username',
                    existing_type=mysql.VARCHAR(length=255),
                    type_=sqlmodel.sql.sqltypes.AutoString(length=100),
                    existing_nullable=False)
    op.alter_column('user', 'hashed_password',
                    existing_type=mysql.VARCHAR(length=255),
                    type_=sqlmodel.sql.sqltypes.AutoString(length=100),
                    existing_nullable=False)
    op.alter_column('user', 'email',
                    existing_type=mysql.VARCHAR(length=255),
                    # The maximum length of an email address according to the RFC specification is 320 characters
                    type_=sqlmodel.sql.sqltypes.AutoString(length=320),
                    existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'hashed_password',
                    existing_type=sqlmodel.sql.sqltypes.AutoString(length=100),
                    type_=mysql.VARCHAR(length=255),
                    existing_nullable=False)
    op.alter_column('user', 'username',
                    existing_type=sqlmodel.sql.sqltypes.AutoString(length=100),
                    type_=mysql.VARCHAR(length=255),
                    existing_nullable=False)
    op.alter_column('user', 'email',
                    existing_type=sqlmodel.sql.sqltypes.AutoString(length=320),
                    type_=mysql.VARCHAR(length=255),
                    existing_nullable=False)
    # ### end Alembic commands ###
